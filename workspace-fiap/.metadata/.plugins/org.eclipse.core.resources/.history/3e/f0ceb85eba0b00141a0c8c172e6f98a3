package br.com.fiap.java.servico;

/**
 * Import do arquivos externos utilizados na classe
 */
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import br.com.fiap.java.bean.Atividade;
import br.com.fiap.java.exception.NegocioException;
import br.com.fiap.java.io.AtividadeArquivo;
import br.com.fiap.java.util.Util;

/**
 * @author Turma Fiap 23SCJ
 */
public class ServicoMensagem {
	/**
	 * Atributo - Logger
	 */
	Logger logger = Logger.getLogger(this.getClass().getName());

	/**
	 * Método salvar
	 * 
	 * @param atividade
	 */
	public void salvar(Atividade atividade) {
		logger.setLevel(Level.ALL);
		logger.log(Level.INFO, "Método salvar()");
		StringBuilder sb = new StringBuilder();
		sb.append(Util.dataParaArquivo(atividade.getDataInicio()));
		sb.append(";");
		sb.append(Util.dataParaArquivo(atividade.getDataFim()));
		sb.append(";");
		sb.append(atividade.getNome());
		sb.append(";");
		sb.append(atividade.getLocal());
		Map<Date, Atividade> mapa = controle();
		Atividade atividadeRegistrada = mapa.get(atividade.getDataInicio());
		try {
			if (atividadeRegistrada != null) {
				int resp = JOptionPane
						.showConfirmDialog(null,
								"Este evento já existe na data solicitada! Deseja inclui-lo?");
				if (resp == 0) {
					AtividadeArquivo.getInstance().escreverAtividades(
							sb.toString());
				} else {
					JOptionPane.showMessageDialog(null, "Evento discartado");
				}
			} else {
				AtividadeArquivo.getInstance()
						.escreverAtividades(sb.toString());
			}
		} catch (NegocioException e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
		}
	}

	/**
	 * Método listar
	 * 
	 * @return lista de contatos
	 */
	public List<Atividade> listar() {
		logger.setLevel(Level.ALL);
		logger.log(Level.INFO, "Método listar()");
		List<Atividade> lista = new ArrayList<Atividade>();
		try {
			String atividades = AtividadeArquivo.getInstance().lerAtividades();
			String[] array = atividades.split("!@#");
			for (int x = 0; x < array.length; x++) {
				if (array[x].length() > 10) {
					String trata = array[x].replaceAll("\n", "");
					Atividade c = new Atividade();
					String[] arrayAtividades = trata.split(";");
					c.setDataInicio(Util.isDataOk(arrayAtividades[0]));
					c.setDataFim(Util.isDataOk(arrayAtividades[1]));
					c.setNome(arrayAtividades[2]);
					c.setLocal(arrayAtividades[3]);
					lista.add(c);
				}
			}
		} catch (NegocioException e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
		}
		return lista;
	}

	/**
	 * Método controle
	 * 
	 * @return mapa de contatos
	 */
	private Map<Date, Atividade> controle() {
		logger.setLevel(Level.ALL);
		logger.log(Level.INFO, "Método controle()");
		Map<Date, Atividade> mapa = new HashMap<Date, Atividade>();
		try {
			String atividades = AtividadeArquivo.getInstance().lerAtividades();
			String[] array = atividades.split("!@#");
			for (int x = 0; x < array.length; x++) {
				if (array[x].length() > 10) {
					String trata = array[x].replaceAll("\n", "");
					Atividade c = new Atividade();
					String[] arrayAtividades = trata.split(";");
					c.setDataInicio(Util.isDataOk(arrayAtividades[0]));
					c.setDataFim(Util.isDataOk(arrayAtividades[1]));
					c.setNome(arrayAtividades[2]);
					c.setLocal(arrayAtividades[3]);
					mapa.put(c.getDataInicio(), c);
				}
			}
		} catch (NegocioException e) {
			JOptionPane.showMessageDialog(null, e.getMessage());
		}
		return mapa;
	}
}
